# Docker Compose para Cluster Citus - Apple Silicon Ready
# TCC: Bancos de Dados Distribuídos

services:
  # ──────────────── Citus Master (Coordinator) ────────────────
  master:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_master"
    image: "citusdata/citus:12.1"
    platform: linux/amd64
    ports: ["${COORDINATOR_EXTERNAL_PORT:-5432}:5432"]
    labels: ["com.citusdata.role=Master"]
    environment: &AUTH
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
      PGUSER: "${POSTGRES_USER:-postgres}"
      PGPASSWORD: "${POSTGRES_PASSWORD:-postgres}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ──────────────── Citus Worker 1 ────────────────  
  worker1:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_worker1"
    image: "citusdata/citus:12.1"
    platform: linux/amd64
    labels: ["com.citusdata.role=Worker"]
    depends_on: 
      master:
        condition: service_healthy
    environment: *AUTH
    expose:
      - "5432"

  # ──────────────── Citus Worker 2 ────────────────
  worker2:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_worker2"
    image: "citusdata/citus:12.1"
    platform: linux/amd64
    labels: ["com.citusdata.role=Worker"]
    depends_on: 
      master:
        condition: service_healthy
    environment: *AUTH
    expose:
      - "5432"

  # ──────────────── Metrics Exporter ────────────────
  postgres-exporter:
    image: "prometheuscommunity/postgres-exporter:latest"
    container_name: postgres_exporter
    platform: linux/amd64
    ports:
      - "9187:9187"
    depends_on:
      master:
        condition: service_healthy
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@master:5432/postgres?sslmode=disable"

   # ──────────────── Node Exporter ────────────────
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    platform: linux/amd64
    ports:
      - "9100:9100"
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev)($|/)"'

  # ──────────────── Prometheus ────────────────
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    platform: linux/amd64
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - postgres-exporter

  # ──────────────── Grafana ────────────────
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    platform: linux/amd64
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  grafana-storage:

# Comandos úteis:
# docker exec -it ${COMPOSE_PROJECT_NAME:-citus}_master psql -U postgres
# docker exec -it ${COMPOSE_PROJECT_NAME:-citus}_worker1 psql -U postgres  
# docker exec -it ${COMPOSE_PROJECT_NAME:-citus}_worker2 psql -U postgres